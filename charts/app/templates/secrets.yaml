apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-app-secrets"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
type: Opaque
data:
  # redis settings
  {{- if .Values.redis.enabled }}
  # provisioned redis settings
  APP_REDIS_URI: {{ printf "redis://%s-redis-master:6379" .Release.Name  | b64enc }}
  {{- else }}
  # custom redis settings
  {{- with .Values.app.redis }}
  {{- include "app.secretValue" ( dict "Key" "APP_REDIS_URI" "Value" .uri ) }}
  {{- end }}
  {{- end }}

  # database settings
  {{- with .Values.app.database }}
  {{- include "app.secretValue" ( dict "Key" "APP_DB_URI" "Value" .uri ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_DB_NAME" "Value" .name ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_DB_POOL" "Value" .pool ) }}
  {{- end }}

  # CSFLE settings
  {{- with .Values.app.csfle }}
  {{- include "app.secretValue" ( dict "Key" "APP_CSFLE_MODE" "Value" .mode ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_CSFLE_KEY_VAULT" "Value" .keyVault ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_CSFLE_MASTER_KEY" "Value" .masterKey ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_CSFLE_ACCESS_KEY" "Value" .accessKey ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_CSFLE_SECRET_KEY" "Value" .secretKey ) }}
  {{- end }}

  # session settings
  {{- with .Values.app.session }}
  {{- include "app.secretValue" ( dict "Key" "APP_SESSION_SECRET" "Value" .secret ) }}
  {{- end }}

  # smtp settings
  {{- with .Values.app.smtp }}
  {{- include "app.secretValue" ( dict "Key" "APP_SMTP_HOST" "Value" .host ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_SMTP_PORT" "Value" .port ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_SMTP_SECURE" "Value" .secure ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_SMTP_USER" "Value" .user ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_SMTP_PASSWORD" "Value" .password ) }}
  {{- end }}

  # storage settings
  {{- if .Values.minio.enabled }}
  APP_STORAGE_ENDPOINT: {{ printf "%s-minio" .Release.Name | b64enc }}
  APP_STORAGE_ACCESS_KEY: {{ .Values.minio.auth.rootUser | b64enc }}
  APP_STORAGE_SECRET_KEY: {{ .Values.minio.auth.rootPassword | b64enc }}
  APP_STORAGE_SSL: {{ "false" | b64enc }}
  APP_STORAGE_PORT: {{ "9000" | b64enc }}
  APP_STORAGE_BUCKET: {{ .Values.minio.defaultBuckets | b64enc }}
  {{- else }}
  {{- with .Values.app.storage }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_ENDPOINT" "Value" .endpoint ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_ACCESS_KEY" "Value" .accessKey ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_SECRET_KEY" "Value" .secretKey ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_SSL" "Value" .ssl ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_PORT" "Value" .port ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_REGION" "Value" .region ) }}
  {{- include "app.secretValue" ( dict "Key" "APP_STORAGE_BUCKET" "Value" .bucket ) }}
  {{- end }}
  {{- end }}
